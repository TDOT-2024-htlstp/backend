DROP TABLE IF EXISTS orders_entries;
DROP TABLE IF EXISTS product_entries;
DROP TABLE IF EXISTS products;
DROP TABLE IF EXISTS orders;
DROP TABLE IF EXISTS categories;


CREATE TABLE categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE orders
(
    id     BIGINT NOT NULL,
    status VARCHAR(255),
    CONSTRAINT pk_orders PRIMARY KEY (id)
);

CREATE TABLE orders_entries
(
    order_id   UUID   NOT NULL,
    entries_id BIGINT NOT NULL
);

CREATE TABLE product_entries
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    product_id BIGINT,
    order_id   UUID,
    amount     INTEGER                                 NOT NULL,
    image_path VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_product_entries PRIMARY KEY (id)
);

CREATE TABLE products
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255),
    price       INTEGER                                 NOT NULL,
    amount_left INTEGER                                 NOT NULL,
    category_id BIGINT,
    CONSTRAINT pk_products PRIMARY KEY (id)
);

ALTER TABLE orders_entries
    ADD CONSTRAINT uc_orders_entries_entries UNIQUE (entries_id);

ALTER TABLE products
    ADD CONSTRAINT FK_PRODUCTS_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES categories (id);

ALTER TABLE product_entries
    ADD CONSTRAINT FK_PRODUCT_ENTRIES_ON_ORDER FOREIGN KEY (order_id) REFERENCES orders (id);

ALTER TABLE product_entries
    ADD CONSTRAINT FK_PRODUCT_ENTRIES_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES products (id);

ALTER TABLE orders_entries
    ADD CONSTRAINT fk_ordent_on_order FOREIGN KEY (order_id) REFERENCES orders (id);

ALTER TABLE orders_entries
    ADD CONSTRAINT fk_ordent_on_product_entry FOREIGN KEY (entries_id) REFERENCES product_entries (id);